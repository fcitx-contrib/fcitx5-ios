diff --git a/CMakeLists.txt b/CMakeLists.txt
index 0d219a51..21695937 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -224,9 +224,7 @@ configure_file(${CMAKE_CURRENT_SOURCE_DIR}/config.h.in ${CMAKE_CURRENT_BINARY_DI
 include_directories(${CMAKE_CURRENT_BINARY_DIR})
 
 add_subdirectory(src)
-add_subdirectory(data)
 add_subdirectory(po)
-add_subdirectory(testing)
 
 #######################################################################
 # Test features
diff --git a/src/lib/fcitx-config/CMakeLists.txt b/src/lib/fcitx-config/CMakeLists.txt
index 85c9865b..edf51a44 100644
--- a/src/lib/fcitx-config/CMakeLists.txt
+++ b/src/lib/fcitx-config/CMakeLists.txt
@@ -28,10 +28,9 @@ ecm_setup_version(PROJECT
                   PACKAGE_VERSION_FILE "${CMAKE_CURRENT_BINARY_DIR}/Fcitx5ConfigConfigVersion.cmake"
                   SOVERSION 6)
 
-add_library(Fcitx5Config SHARED ${FCITX_CONFIG_SOURCES})
+add_library(Fcitx5Config STATIC ${FCITX_CONFIG_SOURCES})
 set_target_properties(Fcitx5Config
-  PROPERTIES VERSION ${Fcitx5Config_VERSION}
-  SOVERSION ${Fcitx5Config_SOVERSION}
+  PROPERTIES
   EXPORT_NAME Config
   )
 target_include_directories(Fcitx5Config PUBLIC
diff --git a/src/lib/fcitx-utils/CMakeLists.txt b/src/lib/fcitx-utils/CMakeLists.txt
index 4fe67c8d..29514786 100644
--- a/src/lib/fcitx-utils/CMakeLists.txt
+++ b/src/lib/fcitx-utils/CMakeLists.txt
@@ -119,10 +119,9 @@ ecm_setup_version(PROJECT
                   PACKAGE_VERSION_FILE "${CMAKE_CURRENT_BINARY_DIR}/Fcitx5UtilsConfigVersion.cmake"
                   SOVERSION 2)
 
-add_library(Fcitx5Utils SHARED ${FCITX_UTILS_SOURCES})
+add_library(Fcitx5Utils STATIC ${FCITX_UTILS_SOURCES})
 set_target_properties(Fcitx5Utils
-  PROPERTIES VERSION ${Fcitx5Utils_VERSION}
-  SOVERSION ${Fcitx5Utils_SOVERSION}
+  PROPERTIES
   EXPORT_NAME Utils
   )
 target_include_directories(Fcitx5Utils PUBLIC
diff --git a/src/lib/fcitx/CMakeLists.txt b/src/lib/fcitx/CMakeLists.txt
index df15dd57..3c1d3ff2 100644
--- a/src/lib/fcitx/CMakeLists.txt
+++ b/src/lib/fcitx/CMakeLists.txt
@@ -65,10 +65,9 @@ ecm_setup_version(PROJECT
                   PACKAGE_VERSION_FILE "${CMAKE_CURRENT_BINARY_DIR}/Fcitx5CoreConfigVersion.cmake"
                   SOVERSION 7)
 
-add_library(Fcitx5Core SHARED ${FCITX_CORE_SOURCES})
+add_library(Fcitx5Core STATIC ${FCITX_CORE_SOURCES})
 set_target_properties(Fcitx5Core
-  PROPERTIES VERSION ${Fcitx5Core_VERSION}
-  SOVERSION ${Fcitx5Core_SOVERSION}
+  PROPERTIES
   EXPORT_NAME Core
   )
 target_include_directories(Fcitx5Core PUBLIC
diff --git a/src/lib/fcitx/addoninfo.cpp b/src/lib/fcitx/addoninfo.cpp
index 49d8c6e4..f6acad08 100644
--- a/src/lib/fcitx/addoninfo.cpp
+++ b/src/lib/fcitx/addoninfo.cpp
@@ -109,7 +109,8 @@ const I18NString &AddonInfo::comment() const {
 
 const std::string &AddonInfo::type() const {
     FCITX_D();
-    return d->addon->type.value();
+    static const std::string t = "StaticLibrary";
+    return t;
 }
 
 AddonCategory AddonInfo::category() const {
diff --git a/src/lib/fcitx/addonmanager.cpp b/src/lib/fcitx/addonmanager.cpp
index 55269f33..5e7b8d27 100644
--- a/src/lib/fcitx/addonmanager.cpp
+++ b/src/lib/fcitx/addonmanager.cpp
@@ -250,7 +250,6 @@ void AddonManager::unregisterLoader(const std::string &name) {
 }
 
 void AddonManager::registerDefaultLoader(StaticAddonRegistry *registry) {
-    registerLoader(std::make_unique<SharedLibraryLoader>());
     if (registry) {
         registerLoader(std::make_unique<StaticLibraryLoader>(registry));
     }
diff --git a/src/modules/spell/CMakeLists.txt b/src/modules/spell/CMakeLists.txt
index ab1ce4df..e450d690 100644
--- a/src/modules/spell/CMakeLists.txt
+++ b/src/modules/spell/CMakeLists.txt
@@ -5,7 +5,7 @@ if (TARGET PkgConfig::Enchant)
     set(SPELL_SOURCES ${SPELL_SOURCES} spell-enchant.cpp)
 endif()
 
-add_library(spell MODULE ${SPELL_SOURCES})
+add_library(spell STATIC ${SPELL_SOURCES})
 target_link_libraries(spell Fcitx5::Core)
 if (TARGET PkgConfig::Enchant)
     target_link_libraries(spell PkgConfig::Enchant)
